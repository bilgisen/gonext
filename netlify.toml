[build]
  publish = ".next"
  command = "npm run build"

[build.environment]
  NODE_VERSION = "20"
  # Enable Netlify Image CDN and Sharp
  NEXT_SHARP_PATH = "/node_modules/sharp"
  ENABLE_IMAGEMAGICK = "true"

# Enable Netlify Image CDN and Next.js plugin
[[plugins]]
  package = "@netlify/plugin-nextjs"

# Image optimization with Netlify Image CDN
[[redirects]]
  from = "/_netlify/images/*"
  to = "https://api.netlify.com/image/v1/:splat"  # Boşluk ve fazladan nokta kaldırıldı
  status = 200
  force = true

# Handle blob serving with proper caching
[[redirects]]
  from = "/api/blobs/*"
  to = "https://:splat.netlify.app"
  status = 200
  force = true

# Cache control for blob storage
[[headers]]
  for = "/api/blobs/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Access-Control-Allow-Origin = "*"

# Handle blob listing and operations
[[redirects]]
  from = "/_netlify/blobs/*"
  to = "/api/blobs/:splat"
  status = 200
  force = true

# Next.js specific routes
[[redirects]]
  from = "/_next/static/*"
  to = "/_next/static/:splat"
  status = 200

# Edge Functions configuration (commented out as it's not properly configured)
# [[edge_functions]]
#   path = "/api/edge-function"
#   function = "edge-function"

# Scheduled Functions
[functions]
  node_bundler = "esbuild"
  external_node_modules = ["@netlify/functions"]

# Configure the scheduled function
[functions."fetch-news-cron"] # Fonksiyon dosyasının adı (uzantı hariç)
  schedule = "*/15 * * * *"  # Every 15 minutes - Netlify'nin cron desteklediğinden emin olun, aksi takdirde "0,15,30,45 * * * *" kullanın
  # 'function' ve 'path' anahtarları Scheduled Function için geçerli DEĞİLDİR.
  # Scheduled Function'lar URL üzerinden erişilebilir değildir.

# Handle API routes (Genel API yönlendirmeleri, Scheduled Function'ı etkilemez)
[[redirects]]
  from = "/api/*"
  to = "/api/:splat"
  status = 200

# Handle static files (Genel fallback, Scheduled Function'ı etkilemez)
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200

# Cache settings for images and assets
[[headers]]
  for = "/*"
  [headers.values]
    X-Content-Type-Options = "nosniff"
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    Referrer-Policy = "strict-origin-when-cross-origin"

# Cache settings for images
[[headers]]
  for = "/*.jpg"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.jpeg"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.png"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.webp"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.avif"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/_next/image*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, must-revalidate"

# Handle image optimization requests (Genel resim optimizasyon yönlendirmesi)
[[redirects]]
  from = "/_netlify/images"
  to = "/_next/image"
  status = 200
  force = true
  [redirects.query]
    url = ":url"
    w = ":width"
    q = ":quality"

# Serve static images directly
[[headers]]
  for = "/images/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, must-revalidate"

# Image optimization settings
[images]
  # Allow image optimization from specific domains
  remote_images = [
    "https://image.dunya.com/", # Fazladan boşluk ve .* kaldırıldı
    "https://*.dunya.com/",
    "https://i.dunya.com/",     # Fazladan boşluk kaldırıldı
    "https://images.unsplash.com/" # Fazladan boşluk kaldırıldı
  ]
  # remote_patterns, regex desenleri için kullanılır
  remote_patterns = [
    "^https://image\\.dunya\\.com/.*$",
    "^https://[^/]*\\.dunya\\.com/.*$", # .*\\.dunya\\.com yerine [^/]*\\.dunya\\.com daha spesifik olabilir
    "^https://i\\.dunya\\.com/.*$",
    "^https://images\\.unsplash\\.com/.*$"
  ]
  min_bytes = 1024  # 1KB
  max_bytes = 10485760  # 10MB